<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
			 xmlns:v="clr-namespace:ChordGeneratorMAUI.Views"
			 xmlns:vm="clr-namespace:ChordGeneratorMAUI.ViewModels"
             x:Class="ChordGeneratorMAUI.Views.ReadingMode" Background="{StaticResource Black}" Shell.TabBarIsVisible="False">
	<ContentPage.Padding>
		<OnPlatform x:TypeArguments="Thickness">
			<On Platform="iOS" Value="0, 35, 0, 0" />
		</OnPlatform>
	</ContentPage.Padding>

	<ContentPage.Resources>
		<ResourceDictionary>

			<Style TargetType="Label">
				<Setter Property="FontSize" Value="{OnPlatform iOS=24, Android=26, WinUI=48, MacCatalyst=48}"></Setter>
				<Setter Property="TextColor" Value="White"></Setter>
				<Setter Property="Opacity" Value="1"></Setter>
				<Setter Property="HorizontalOptions" Value="Center"></Setter>
				<Setter Property="VerticalOptions" Value="Center"></Setter>
				<Setter Property="HorizontalTextAlignment" Value="Center"></Setter>
				<Setter Property="VerticalTextAlignment" Value="Center"></Setter>
				<Setter Property="Margin" Value="20"></Setter>
			</Style>

		</ResourceDictionary>
	</ContentPage.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="*"></RowDefinition>
			<RowDefinition Height="Auto"></RowDefinition>
		</Grid.RowDefinitions>

		<!--INFO/SETTINGS-->
		<Border Grid.Row="0" BackgroundColor="{StaticResource Gray100}" StrokeThickness="0" Margin="10,0,10,10">
			<Border.GestureRecognizers>
				<TapGestureRecognizer Tapped="SettingsButton_Tapped" />
			</Border.GestureRecognizers>

			<Border.StrokeShape>
				<RoundRectangle CornerRadius="0, 0, 10, 10"></RoundRectangle>
			</Border.StrokeShape>

			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"></ColumnDefinition>
					<ColumnDefinition Width="*"></ColumnDefinition>
					<ColumnDefinition Width="*"></ColumnDefinition>
				</Grid.ColumnDefinitions>

				<VerticalStackLayout Grid.Column="0" HorizontalOptions="Center" VerticalOptions="Center" Margin="35,0">
					<Label Text="Key" TextColor="{StaticResource Black}" Opacity=".5" FontSize="Small" Margin="0"></Label>
					<Label Text="{Binding ChordChart.SelectedKey}" TextColor="{StaticResource Tertiary}" Opacity="1" FontSize="Small" Margin="0" FontAttributes="Bold"></Label>
				</VerticalStackLayout>

				<Label Grid.Column="1" Text="Reading Mode" TextColor="{StaticResource Black}" Opacity="1" FontSize="Medium" FontAttributes="Bold" HorizontalOptions="Center"></Label>

				<VerticalStackLayout Grid.Column="2" HorizontalOptions="Center" VerticalOptions="Center" Margin="35,0">
					<Label Text="BPM" TextColor="{StaticResource Black}" Opacity=".5" FontSize="Small" Margin="0"></Label>
					<Label Text="{Binding ChordChart.BPM}" TextColor="{StaticResource Tertiary}" Opacity="1" FontSize="Small" Margin="0" FontAttributes="Bold"></Label>
				</VerticalStackLayout>
			</Grid>
		</Border>

		<!--CHART NAME-->
		<Grid Grid.Row="1" Margin="10,10,10,5">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="50"></ColumnDefinition>
				<ColumnDefinition Width="*"></ColumnDefinition>
				<ColumnDefinition Width="50"></ColumnDefinition>
			</Grid.ColumnDefinitions>

			<Entry Grid.Column="1" Text="{Binding ChordChart.Name}" TextColor="White" PlaceholderColor="Gray" Placeholder="Chart Name"
						FontSize="Small" FontAttributes="Bold" HorizontalOptions="Center" HorizontalTextAlignment="Center" Margin="5,0"></Entry>

			<!--TODO:-->
			<!--<Button Grid.Column="2" FontFamily="FA Pro Solid" Text="trash"></Button>-->
		</Grid>

		<!--METRONOME-->
		<v:Metronome x:Name="MetronomeControl" Grid.Row="2" Margin="20,10"></v:Metronome>

		<!--CHART-->
		<CollectionView x:Name="ChordChartCollectionView" Grid.Row="3" Grid.RowSpan="2" Margin="20,0,0,60" 
						ItemsSource="{Binding ChordChart.Chords}"
						SelectionMode="None" ItemsLayout="VerticalGrid, 4" VerticalOptions="FillAndExpand" ItemSizingStrategy="MeasureFirstItem" Background="{StaticResource BlackBrush}">

			<CollectionView.ItemTemplate>
				<DataTemplate>

					<Border MinimumHeightRequest="70" Padding="0" StrokeThickness="2">
						<Border.Style>
							<Style TargetType="Border">
								<Setter Property="BackgroundColor" Value="{StaticResource Black}"></Setter>
								<Setter Property="StrokeThickness" Value="0"></Setter>
								<Setter Property="Stroke" Value="Transparent" />
								<Setter Property="Margin" Value="5"></Setter>
								<Setter Property="StrokeShape">
									<Setter.Value>
										<RoundRectangle CornerRadius="10"></RoundRectangle>
									</Setter.Value>
								</Setter>
								<Style.Triggers>
									<DataTrigger TargetType="Border" Binding="{Binding IsHighlighted}" Value="True">
										<Setter Property="Stroke" Value="Yellow"></Setter>
										<Setter Property="StrokeThickness" Value="4"></Setter>
									</DataTrigger>
									<DataTrigger TargetType="Border" Binding="{Binding IsHighlighted}" Value="False">
										<Setter Property="Stroke" Value="Transparent"></Setter>
										<Setter Property="StrokeThickness" Value="0"></Setter>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Border.Style>

						<!--CHORD NAME-->
						<Label FontSize="Medium" Margin="4" FontAttributes="None" HorizontalOptions="Center" FontFamily="OpenSansSemibold" Text="{Binding Name}"></Label>
					</Border>

				</DataTemplate>
			</CollectionView.ItemTemplate>
		</CollectionView>

		<!--BOTTOM/PLAYBACK-->
		<Grid Grid.Row="4" VerticalOptions="End" Padding="10,0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"></ColumnDefinition>
				<ColumnDefinition Width="*"></ColumnDefinition>
				<ColumnDefinition Width="*"></ColumnDefinition>
				<ColumnDefinition Width="*"></ColumnDefinition>
				<ColumnDefinition Width="*"></ColumnDefinition>
			</Grid.ColumnDefinitions>

			<Border Grid.ColumnSpan="5" Background="{StaticResource Primary}" Opacity=".98" Margin="0" StrokeThickness="0" MinimumHeightRequest="80">
				<Border.StrokeShape>
					<RoundRectangle CornerRadius="10,10,0,0"></RoundRectangle>
				</Border.StrokeShape>
			</Border>

			<Button Grid.Column="0" Text="chevron-double-left" IsEnabled="True" Style="{StaticResource PlaybackButton}"
					Command="{Binding PreviousChartCommand}">
				<Button.Triggers>
					<DataTrigger TargetType="Button" Binding="{Binding IsPreviousEnabled}" Value="False">
						<Setter Property="IsEnabled" Value="False"></Setter>
					</DataTrigger>
				</Button.Triggers>
			</Button>

			<Button Grid.Column="1" Text="undo-alt" Style="{StaticResource PlaybackButton}"
					Command="{Binding ResetCommand}"></Button>

            <Button Grid.Column="2" Text="pause" IsEnabled="True" Style="{StaticResource PlaybackButton}" FontSize="{OnPlatform iOS=32, WinUI=Large}"
					Command="{Binding PauseToggleCommand}">
				<Button.Triggers>
					<DataTrigger TargetType="Button" Binding="{Binding ChordChart.IsPaused}" Value="True">
						<Setter Property="Text" Value="play"></Setter>
					</DataTrigger>
					<DataTrigger TargetType="Button" Binding="{Binding ChordChart.IsChordChartActive}" Value="False">
						<Setter Property="IsEnabled" Value="False"></Setter>
					</DataTrigger>
				</Button.Triggers>
			</Button>

			<Button Grid.Column="3" Text="save" Style="{StaticResource PlaybackButton}" IsEnabled="False"
					Command="{Binding SaveChartCommand}"></Button>

			<Button Grid.Column="4" Text="chevron-double-right" Style="{StaticResource PlaybackButton}"
					Command="{Binding GenerateChordsCommand}"></Button>
		</Grid>
	</Grid>
</ContentPage>