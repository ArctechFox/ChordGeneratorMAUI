<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:controls="clr-namespace:Plugin.MauiMTAdmob.Controls;assembly=Plugin.MauiMTAdmob"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
			 xmlns:v="clr-namespace:ChordGeneratorMAUI.Views"
			 xmlns:vm="clr-namespace:ChordGeneratorMAUI.ViewModels"
             x:Class="ChordGeneratorMAUI.Views.ChartPage" Background="{StaticResource Black}" Shell.TabBarIsVisible="{OnPlatform iOS=False, Android=False, Default=True}">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="75"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <!--AD VIEW-->
        <controls:MTAdView AdSize="AnchoredAdaptive" HorizontalOptions="Center" VerticalOptions="CenterAndExpand" AdsId="ca-app-pub-2329707705985560/7005829538" />
        <!--<Border Stroke="White" Opacity=".33">
            <Label HorizontalOptions="Center" Text="**********************  ad banner  **********************" FontAttributes="None"></Label>

        </Border>-->

        <!--INFO/SETTINGS HEADER-->
        <Grid Grid.Row="1" Margin="10,2,10,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="1.66*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <!--KEY-->
            <Button Grid.Column="0" x:Name="btnKeyPicker" HorizontalOptions="Fill" FontSize="16" Background="{StaticResource LightToDarkGrayVertical}" BorderWidth="4" BorderColor="{StaticResource Gray600}"/>
            <VerticalStackLayout Grid.Column="0" HorizontalOptions="Center" VerticalOptions="Center">
                <Label Text="Key" Margin="0"></Label>
                <Label Text="{Binding ChordChart.SelectedKey}" TextColor="{StaticResource HotMagenta}" FontAttributes="Bold" FontSize="16" Margin="0,5,0,0"></Label>
            </VerticalStackLayout>

            <!-- KEY PICKER ("HIDDEN")-->
            <Picker Grid.Column="0" Title="Key" SelectedItem="{Binding ChordChart.SelectedKey}" Opacity="1" ZIndex="1" TextColor="Transparent" TitleColor="Transparent">
                <Picker.ItemsSource>
                    <x:Array Type="{x:Type sys:String}">
                        <sys:String>All</sys:String>
                        <sys:String>Ab Major</sys:String>
                        <sys:String>A Major</sys:String>
                        <sys:String>Ab Minor</sys:String>
                        <sys:String>A Minor</sys:String>
                        <sys:String>A# Minor</sys:String>

                        <sys:String>Bb Major</sys:String>
                        <sys:String>B Major</sys:String>
                        <sys:String>Bb Minor</sys:String>
                        <sys:String>B Minor</sys:String>

                        <sys:String>Cb Major</sys:String>
                        <sys:String>C Major</sys:String>
                        <sys:String>C# Major</sys:String>
                        <sys:String>C Minor</sys:String>
                        <sys:String>C# Minor</sys:String>

                        <sys:String>Db Major</sys:String>
                        <sys:String>D Major</sys:String>
                        <sys:String>D Minor</sys:String>
                        <sys:String>D# Minor</sys:String>

                        <sys:String>Eb Major</sys:String>
                        <sys:String>E Major</sys:String>
                        <sys:String>Eb Minor</sys:String>
                        <sys:String>E Minor</sys:String>

                        <sys:String>F Major</sys:String>
                        <sys:String>F# Major</sys:String>
                        <sys:String>F Minor</sys:String>
                        <sys:String>F# Minor</sys:String>

                        <sys:String>Gb Major</sys:String>
                        <sys:String>G Major</sys:String>
                        <sys:String>G Minor</sys:String>
                        <sys:String>G# Minor</sys:String>

                    </x:Array>
                </Picker.ItemsSource>
            </Picker>

            <!--PRACTICE/COMPOSE-->
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="60"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding TogglePracticeComposeModeCommand}"/>
                </Grid.GestureRecognizers>

                <Button Grid.ColumnSpan="3" HorizontalOptions="Fill" Background="{StaticResource LightToDarkGrayVertical}" BorderWidth="4" Margin="10,0" BorderColor="{StaticResource Gray600}" 
                    Command="{Binding TogglePracticeComposeModeCommand}"/>

                <!--Practice Icon-->
                <Label Grid.Column="0" FontFamily="FA Pro Light" Text="book-open" FontSize="16" HorizontalOptions="Center" Margin="10,0,0,0">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsPracticeMode}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource HotMagenta}"></Setter>
                            <Setter Property="FontFamily" Value="FA Pro Solid"></Setter>
                            <Setter Property="Text" Value="book-open"></Setter>
                            <Setter Property="Opacity" Value="1"></Setter>
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding IsPracticeMode}" Value="False">
                            <Setter Property="TextColor" Value="{StaticResource White}"></Setter>
                            <Setter Property="FontFamily" Value="FA Pro Light"></Setter>
                            <Setter Property="Text" Value="book-open"></Setter>
                            <Setter Property="Opacity" Value=".33"></Setter>
                        </DataTrigger>
                    </Label.Triggers>
                </Label>

                <!--Text-->
                <Label Grid.Column="1" Text="{Binding ActiveModeText}">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding TogglePracticeComposeModeCommand}"/>
                    </Label.GestureRecognizers>
                </Label>

                <!--Compose Icon-->
                <Label Grid.Column="2" FontFamily="FA Pro Light" Text="pencil" FontSize="16"  HorizontalOptions="Center" Margin="0,0,10,0">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsPracticeMode}" Value="False">
                            <Setter Property="TextColor" Value="{StaticResource HotMagenta}"></Setter>
                            <Setter Property="FontFamily" Value="FA Pro Solid"></Setter>
                            <Setter Property="Text" Value="pencil"></Setter>
                            <Setter Property="Opacity" Value="1"></Setter>
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding IsPracticeMode}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource White}"></Setter>
                            <Setter Property="FontFamily" Value="FA Pro Light"></Setter>
                            <Setter Property="Text" Value="pencil"></Setter>
                            <Setter Property="Opacity" Value=".33"></Setter>
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </Grid>

            <!--BPM-->
            <Button Grid.Column="2" HorizontalOptions="Fill" FontSize="16" Background="{StaticResource LightToDarkGrayVertical}" BorderWidth="4" BorderColor="{StaticResource Gray600}"/>
            <Grid Grid.Column="2" HorizontalOptions="Fill">

                <!--PICKER ("HIDDEN")-->
                <Picker VerticalOptions="Fill" HorizontalOptions="Fill" Title="BPM" x:Name="pickerBPM" SelectedItem="{Binding ChordChart.BPM}" Opacity="1" ZIndex="1" TextColor="Transparent" TitleColor="Transparent"/>

                <!--minus BPM-->
                <Button FontFamily="FA Pro Solid" Background="Transparent" Text="minus" TextColor="{StaticResource HotMagenta}" FontSize="16" x:Name="btnBPM_minus" Clicked="btnBPM_minus_Clicked"
                        VerticalOptions="Fill" HorizontalOptions="Start" ZIndex="2"/>

                <!--BPM text-->
                <VerticalStackLayout VerticalOptions="Center" HorizontalOptions="Center">
                    <Label Text="BPM" Margin="0"></Label>
                    <Label Text="{Binding ChordChart.BPM, Mode=TwoWay}" x:Name="lblBPM_text" TextColor="{StaticResource HotMagenta}" FontAttributes="Bold" FontSize="16" Margin="0,5,0,0"></Label>
                </VerticalStackLayout>

                <!--plus BPM-->
                <Button FontFamily="FA Pro Solid" Background="Transparent" Text="plus" TextColor="{StaticResource HotMagenta}" FontSize="16" x:Name="btnBPM_plus" Clicked="btnBPM_plus_Clicked" 
                        VerticalOptions="Fill" HorizontalOptions="End" ZIndex="2"/>

            </Grid>
        </Grid>

        <!--CHART NAME ROW-->
        <Grid Grid.Row="2" Margin="10,10,10,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="50"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <!--Home/Back Button-->
            <Button x:Name="btnHome" Grid.Column="0" Background="Transparent" FontSize="22" FontFamily="FA Pro Light" Text="home" Opacity=".8">
                <Button.GestureRecognizers>
                    <TapGestureRecognizer Tapped="HomeButton_Tapped" />
                </Button.GestureRecognizers>
            </Button>

            <Entry Grid.Column="1" Text="{Binding ChordChart.Name}" TextColor="White" PlaceholderColor="Gray" Placeholder="Chart Name"
						FontSize="Small" FontAttributes="Bold" HorizontalOptions="Center" HorizontalTextAlignment="Center" Margin="5,0"></Entry>

            <Button x:Name="btnChartSettings" Grid.Column="2" Background="Transparent" FontSize="22" FontFamily="FA Pro Light" Text="cog" Opacity=".8">
                <Button.GestureRecognizers>
                    <TapGestureRecognizer Tapped="SettingsButton_Tapped" />
                </Button.GestureRecognizers>
            </Button>
        </Grid>

        <!--METRONOME-->
        <v:Metronome x:Name="MetronomeControl" Grid.Row="3" Margin="20,10"></v:Metronome>

        <!--COMPOSE CHART-->
        <CollectionView x:Name="Compose_ChordChartCollectionView" Grid.Row="4" Margin="10,0" MaximumHeightRequest="{OnPlatform iOS=300, Default=2000}"
						ItemsSource="{Binding ChordChart.Chords}" SelectedItem="{Binding SelectedWritingModeChord}" SelectionChanged="CollectionView_SelectionChanged"
						SelectionMode="Single" ItemsLayout="VerticalGrid, 4" ItemSizingStrategy="MeasureFirstItem" Background="{StaticResource BlackBrush}" 
                        IsEnabled="{Binding ChordChart.IsChordChartActive}" IsVisible="False">
            <CollectionView.Triggers>
                <DataTrigger TargetType="CollectionView" Binding="{Binding IsPracticeMode}" Value="False">
                    <Setter Property="IsVisible" Value="True"></Setter>
                </DataTrigger>
            </CollectionView.Triggers>

            <CollectionView.ItemTemplate>
                <DataTemplate>

                    <Border MinimumHeightRequest="55" Background="{StaticResource Black}" Stroke="{StaticResource MainGradientBrush_Vertical}" Margin="5,0,5,30">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="10"></RoundRectangle>
                        </Border.StrokeShape>
                        <Border.Triggers>

                            <DataTrigger TargetType="Border" Binding="{Binding BelongsInKey}" Value="True">
                                <Setter Property="Stroke" Value="{StaticResource MainGradientBrush_Vertical}"></Setter>
                            </DataTrigger>
                            <DataTrigger TargetType="Border" Binding="{Binding BelongsInKey}" Value="False">
                                <Setter Property="Stroke" Value="Yellow"></Setter>
                            </DataTrigger>
                        </Border.Triggers>

                        <!--CHORD NAME-->
                        <Label FontSize="17" Margin="4" FontFamily="Sansation" FontAttributes="None" HorizontalOptions="Center" Text="{Binding Name}"></Label>
                    </Border>

                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <!--PRACTICE CHART-->
        <CollectionView x:Name="Practice_ChordChartCollectionView" IsVisible="{Binding IsPracticeMode}" Grid.Row="4" Margin="10,0" MaximumHeightRequest="{OnPlatform iOS=300, Default=2000}"
						ItemsSource="{Binding ChordChart.Chords}" SelectionMode="Single" SelectedItem="{Binding SelectedPracticeModeChord}"
						ItemsLayout="VerticalGrid, 4" ItemSizingStrategy="MeasureFirstItem" Background="{StaticResource BlackBrush}" 
                        IsEnabled="{Binding ChordChart.IsChordChartActive}">

            <CollectionView.ItemTemplate>
                <DataTemplate>

                    <Border MinimumHeightRequest="55" Margin="5,0,5,30" Background="{StaticResource Black}">

                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="10"></RoundRectangle>
                        </Border.StrokeShape>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger TargetType="Border" Binding="{Binding IsHighlighted}" Value="True">
                                        <Setter Property="Stroke" Value="{StaticResource Primary2}"></Setter>
                                        <Setter Property="StrokeThickness" Value="2"></Setter>
                                        <Setter Property="Shadow">
                                            <Setter.Value>
                                                <Shadow Brush="{StaticResource HotMagenta}"
                                             Offset="0,3"
                                             Radius="5"
                                             Opacity="1" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Border" Binding="{Binding IsHighlighted}" Value="False">
                                        <Setter Property="Stroke" Value="Transparent"></Setter>
                                        <Setter Property="StrokeThickness" Value="0"></Setter>
                                        <Setter Property="Shadow">
                                            <Setter.Value>
                                                <Shadow Opacity="0" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <!--CHORD NAME-->
                        <Label FontSize="17" Margin="4" FontFamily="Sansation" FontAttributes="None" HorizontalOptions="Center" Text="{Binding Name}"></Label>
                    </Border>

                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <!--BOTTOM/PLAYBACK-->
        <Grid Grid.Row="5" VerticalOptions="Start" Padding="0">
            <Grid.Shadow>
                <Shadow Radius="5" Offset="0,-3" Opacity=".6"></Shadow>
            </Grid.Shadow>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <!--TRACK SELECTOR -->
            <v:TrackSelector Grid.ColumnSpan="5" Grid.Row="0" x:Name="TrackSelectorControl"></v:TrackSelector>

            <!--PLAYBACK CONTROLS-->
            <!--Playback Background-->
            <Border Grid.ColumnSpan="5" Grid.Row="1" Background="{StaticResource MainGradientBrush_Vertical}" Opacity=".98" Padding="40" Margin="0" StrokeThickness="0">
                <Border.StrokeShape>
                    <RoundRectangle CornerRadius="0"></RoundRectangle>
                </Border.StrokeShape>
                <Border.Shadow>
                    <Shadow Brush="{StaticResource Primary2}" Radius="10" Offset="0,-5" Opacity=".5"></Shadow>
                </Border.Shadow>
            </Border>

            <!--PREVIOUS-->
            <Button Grid.Column="0" Grid.Row="1" Text="step-backward" Style="{StaticResource FontIconButton}"
					Command="{Binding PreviousChartCommand}" IsEnabled="{Binding IsPreviousEnabled}"/>

            <!--LOOP-->
            <Button Grid.Column="1" Grid.Row="1" Text="repeat" Style="{StaticResource FontIconButton}"
					Command="{Binding LoopToggleCommand}" IsEnabled="{Binding ChordChart.IsChordChartActive}">
                <Button.Triggers>
                    <DataTrigger TargetType="Button" Binding="{Binding ChordChart.LoopPlayback}" Value="True">
                        <Setter Property="FontFamily" Value="FA Pro Solid"></Setter>
                        <Setter Property="FontSize" Value="33"></Setter>
                    </DataTrigger>
                    <DataTrigger TargetType="Button" Binding="{Binding ChordChart.LoopPlayback}" Value="False">
                        <Setter Property="FontFamily" Value="FA Pro Light"></Setter>
                        <Setter Property="FontSize" Value="28"></Setter>
                    </DataTrigger>
                </Button.Triggers>
            </Button>

            <!--PLAY/PAUSE-->
            <Button Grid.Column="2" Grid.Row="1" Command="{Binding PauseToggleCommand}" Text="pause" FontFamily="FA Pro Solid" IsEnabled="{Binding ChordChart.IsChordChartActive}" 
                    Style="{StaticResource FontIconButton}">

                <Button.Triggers>
                    <DataTrigger TargetType="Button" Binding="{Binding ChordChart.IsPaused}" Value="True">
                        <Setter Property="Text" Value="play"></Setter>
                    </DataTrigger>
                    <DataTrigger TargetType="Button" Binding="{Binding ChordChart.IsPaused}" Value="False">
                        <Setter Property="Text" Value="pause"></Setter>
                        <Setter Property="FontFamily" Value="FA Pro Light"></Setter>
                    </DataTrigger>
                    <DataTrigger TargetType="Button" Binding="{Binding ChordChart.IsChordChartActive}" Value="True">
                        <Setter Property="Opacity" Value="1"></Setter>
                    </DataTrigger>
                </Button.Triggers>
            </Button>

            <!--SAVE-->
            <Button Grid.Column="3" Grid.Row="1" Text="save" Style="{StaticResource FontIconButton}" IsEnabled="False"
					Command="{Binding SaveChartCommand}"></Button>

            <!--GENERATE/NEXT CHART-->
            <Button Grid.Column="4" Grid.Row="1" Text="plus" Style="{StaticResource FontIconButton}"
					Command="{Binding GenerateChordsCommand}">
                <Button.Shadow>
                    <Shadow Opacity="0"></Shadow>
                </Button.Shadow>

                <Button.Triggers>

                    <!--Hint; glows when common user action is anticipated next-->
                    <MultiTrigger TargetType="Button">
                        <MultiTrigger.Conditions>
                            <BindingCondition Binding="{Binding ChordChart.IsChordChartActive}" Value="False"></BindingCondition>
                            <BindingCondition Binding="{Binding IsPreviousEnabled}" Value="False"></BindingCondition>
                        </MultiTrigger.Conditions>

                        <Setter Property="Shadow">
                            <Setter.Value>
                                <Shadow Brush="{StaticResource White}" Offset="0,0" Radius="10" Opacity="1"></Shadow>
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger>

                </Button.Triggers>
            </Button>
        </Grid>

    </Grid>
</ContentPage>